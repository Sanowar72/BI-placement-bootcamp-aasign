{"ast":null,"code":"var _jsxFileName = \"/Users/mdsanowaralam/Desktop/job-listing-react-master/src/App.js\";\nimport React from \"react\";\nimport { Box, CircularProgress, Grid, ThemeProvider } from \"@material-ui/core\";\nimport theme from \"./theme/theme\";\nimport Header from \"./component/Header/Index\";\nimport SearchBar from \"./component/SearchBar\";\nimport JobCards from \"./component/jobs/jobCards\";\nimport NewJobModal from \"./component/jobs/NewJobModal\"; // import jobData from './dummyData';\n\nimport { useState } from \"react\";\nimport { firestore, app } from \"./component/firebase/config\";\nimport { useEffect } from \"react\";\nexport default (() => {\n  const [jobs, setjobs] = useState([]);\n  const [loading, setloading] = useState(true);\n  const [newJobModal, setnewJobModal] = useState(false);\n\n  const fetchjobs = async () => {\n    setloading(true);\n    const req = await firestore.collection(\"job collection\").orderBy(\"postedOn\", \"desc\").get(); // console.log(req);\n\n    const tempjobs = req.docs.map(job => ({ ...job.data(),\n      id: job.id,\n      postedOn: job.data().postedOn.toDate()\n    })); // console.log(tempjobs);\n\n    setjobs(tempjobs);\n    setloading(false);\n  };\n\n  const fetchJobsCustom = async jobSearch => {\n    setloading(true);\n    const req = await firestore.collection(\"job collection\").orderBy(\"postedOn\", \"desc\").where(\"locaton\", \"=\", jobSearch.locaton).where(\"type\", \"=\", jobSearch.type).get();\n    const tempjobs = req.docs.map(job => ({ ...job.data(),\n      id: job.id,\n      postedOn: job.data().postedOn.toDate()\n    }));\n    setjobs(tempjobs);\n    setloading(false);\n  };\n\n  const postJob = async jobDetails => {\n    await firestore.collection(\"job collection\").add({ ...jobDetails,\n      postedOn: app.firestore.FieldValue.serverTimestamp()\n    });\n    fetchjobs();\n  };\n\n  useEffect(() => {\n    fetchjobs();\n  }, []);\n  return /*#__PURE__*/React.createElement(ThemeProvider, {\n    theme: theme,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    openNewJobModal: () => setnewJobModal(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(NewJobModal, {\n    closeModal: () => setnewJobModal(false),\n    newJobModal: newJobModal,\n    postJob: postJob,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 10,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(SearchBar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }\n  }), loading ? /*#__PURE__*/React.createElement(Box, {\n    display: \"flex\",\n    justifyContent: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  }, \" \", /*#__PURE__*/React.createElement(CircularProgress, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 15\n    }\n  })) : jobs.map(job => /*#__PURE__*/React.createElement(JobCards, Object.assign({\n    key: job.id\n  }, job, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 31\n    }\n  }))))));\n});","map":{"version":3,"sources":["/Users/mdsanowaralam/Desktop/job-listing-react-master/src/App.js"],"names":["React","Box","CircularProgress","Grid","ThemeProvider","theme","Header","SearchBar","JobCards","NewJobModal","useState","firestore","app","useEffect","jobs","setjobs","loading","setloading","newJobModal","setnewJobModal","fetchjobs","req","collection","orderBy","get","tempjobs","docs","map","job","data","id","postedOn","toDate","fetchJobsCustom","jobSearch","where","locaton","type","postJob","jobDetails","add","FieldValue","serverTimestamp"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Box, CircularProgress, Grid, ThemeProvider } from \"@material-ui/core\";\nimport theme from \"./theme/theme\";\nimport Header from \"./component/Header/Index\";\nimport SearchBar from \"./component/SearchBar\";\nimport JobCards from \"./component/jobs/jobCards\";\nimport NewJobModal from \"./component/jobs/NewJobModal\";\n// import jobData from './dummyData';\nimport { useState } from \"react\";\nimport { firestore, app } from \"./component/firebase/config\";\nimport { useEffect } from \"react\";\n\nexport default () => {\n  const [jobs, setjobs] = useState([]);\n  const [loading, setloading] = useState(true);\n  const [newJobModal, setnewJobModal] = useState(false);\n\n  const fetchjobs = async () => {\n    setloading(true);\n    const req = await firestore\n      .collection(\"job collection\")\n      .orderBy(\"postedOn\", \"desc\")\n      .get();\n    // console.log(req);\n    const tempjobs = req.docs.map((job) => ({\n      ...job.data(),\n      id: job.id,\n      postedOn: job.data().postedOn.toDate(),\n    }));\n    // console.log(tempjobs);\n    setjobs(tempjobs);\n    setloading(false);\n  };\n\n  const fetchJobsCustom = async (jobSearch) => {\n    setloading(true);\n    const req = await firestore\n      .collection(\"job collection\")\n      .orderBy(\"postedOn\", \"desc\")\n      .where(\"locaton\", \"=\", jobSearch.locaton)\n      .where(\"type\",\"=\",jobSearch.type)\n      .get();\n    const tempjobs = req.docs.map((job) => ({\n      ...job.data(),\n      id: job.id,\n      postedOn: job.data().postedOn.toDate(),\n    }));\n    setjobs(tempjobs);\n    setloading(false);\n  };\n\n  const postJob = async (jobDetails) => {\n    await firestore.collection(\"job collection\").add({\n      ...jobDetails,\n      postedOn: app.firestore.FieldValue.serverTimestamp(),\n    });\n    fetchjobs();\n  };\n\n  useEffect(() => {\n    fetchjobs();\n  }, []);\n  return (\n    <ThemeProvider theme={theme}>\n      <Header openNewJobModal={() => setnewJobModal(true)} />\n      <NewJobModal\n        closeModal={() => setnewJobModal(false)}\n        newJobModal={newJobModal}\n        postJob={postJob}\n      />\n      <Grid container justify=\"center\">\n        <Grid item xs={10}>\n          <SearchBar />\n\n          {loading ? (\n            <Box display=\"flex\" justifyContent=\"center\">\n              {\" \"}\n              <CircularProgress />\n            </Box>\n          ) : (\n            jobs.map((job) => <JobCards key={job.id} {...job} />)\n          )}\n\n          {/* {jobs.map(job => <JobCards key={job.id} {...job} />)} */}\n        </Grid>\n      </Grid>\n    </ThemeProvider>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}