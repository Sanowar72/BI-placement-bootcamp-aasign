{"ast":null,"code":"var _jsxFileName = \"/Users/mdsanowaralam/Desktop/job-listing-react-master/src/App.js\";\nimport React from \"react\";\nimport { Box, CircularProgress, Grid, ThemeProvider } from \"@material-ui/core\";\nimport theme from \"./theme/theme\";\nimport Header from \"./component/Header/Index\";\nimport SearchBar from \"./component/SearchBar\";\nimport JobCards from \"./component/jobs/jobCards\";\nimport NewJobModal from \"./component/jobs/NewJobModal\"; // import jobData from './dummyData';\n\nimport { useState } from \"react\";\nimport { firestore, app } from './component/firebase/config';\nimport { useEffect } from \"react\";\nexport default (() => {\n  const [jobs, setjobs] = useState([]);\n  const [loading, setloading] = useState(true);\n  const [newJobModal, setnewJobModal] = useState(false);\n\n  const fetchjobs = async () => {\n    const req = await firestore.collection('job collection').orderBy('postedOn', 'desc').get(); // console.log(req);\n\n    const tempjobs = req.docs.map(job => ({ ...job.data(),\n      id: job.id,\n      postedOn: job.data().postedOn.toDate()\n    })); // console.log(tempjobs);\n\n    setjobs(tempjobs);\n    setloading(false);\n  };\n\n  const postJob = async jobDetails => {\n    await firestore.collection('job collection').add({ ...jobDetails,\n      postedOn: app.firestore.FieldValue.serverTimestamp()\n    });\n  };\n\n  useEffect(() => {\n    fetchjobs();\n  }, []);\n  return /*#__PURE__*/React.createElement(ThemeProvider, {\n    theme: theme,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    openNewJobModal: () => setnewJobModal(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(NewJobModal, {\n    openNewJobModal: true,\n    newJobModal: newJobModal,\n    postJob: postJob,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 10,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(SearchBar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }\n  }), loading ? /*#__PURE__*/React.createElement(Box, {\n    display: \"flex\",\n    justifyContent: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 23\n    }\n  }, \" \", /*#__PURE__*/React.createElement(CircularProgress, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 68\n    }\n  })) : jobs.map(job => /*#__PURE__*/React.createElement(JobCards, Object.assign({\n    key: job.id\n  }, job, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 33\n    }\n  }))))));\n});","map":{"version":3,"sources":["/Users/mdsanowaralam/Desktop/job-listing-react-master/src/App.js"],"names":["React","Box","CircularProgress","Grid","ThemeProvider","theme","Header","SearchBar","JobCards","NewJobModal","useState","firestore","app","useEffect","jobs","setjobs","loading","setloading","newJobModal","setnewJobModal","fetchjobs","req","collection","orderBy","get","tempjobs","docs","map","job","data","id","postedOn","toDate","postJob","jobDetails","add","FieldValue","serverTimestamp"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Box, CircularProgress, Grid, ThemeProvider } from \"@material-ui/core\";\nimport theme from \"./theme/theme\"\nimport Header from \"./component/Header/Index\"\nimport SearchBar from \"./component/SearchBar\"\nimport JobCards from \"./component/jobs/jobCards\";\nimport NewJobModal from \"./component/jobs/NewJobModal\";\n// import jobData from './dummyData';\nimport { useState } from \"react\";\nimport {firestore,app} from './component/firebase/config'\nimport { useEffect } from \"react\";\n\n\nexport default () => {\n  const [jobs, setjobs] = useState([]);\n  const [loading, setloading] = useState(true);\n  const [newJobModal, setnewJobModal] = useState(false);\n\n  const fetchjobs = async () => {\n    const req = await firestore.collection('job collection').orderBy('postedOn', 'desc').get();\n    // console.log(req);\n    const tempjobs = req.docs.map(job => ({ ...job.data(),id:job.id,postedOn:job.data().postedOn.toDate() }))\n    // console.log(tempjobs);\n    setjobs(tempjobs)\n    setloading(false);\n  }\n\n  const postJob = async jobDetails => {\n    await firestore.collection('job collection').add({\n      ...jobDetails,\n      postedOn: app.firestore.FieldValue.serverTimestamp(),\n    })\n  }\n\n\n\n  useEffect(() => {\n    fetchjobs();\n  },[])\n  return (\n    <ThemeProvider theme={theme}>\n      <Header openNewJobModal={()=>setnewJobModal(true)} />\n      <NewJobModal openNewJobModal newJobModal={newJobModal} postJob={postJob} />\n    <Grid container justify=\"center\">\n      <Grid item xs={10}>\n          <SearchBar />\n\n          {\n            loading ? <Box display=\"flex\" justifyContent=\"center\"> <CircularProgress /></Box>\n              : jobs.map(job => <JobCards key={job.id} {...job} />)\n          }\n          \n\n\n          {/* {jobs.map(job => <JobCards key={job.id} {...job} />)} */}\n      </Grid>\n    </Grid>\n  </ThemeProvider>\n)};\n"]},"metadata":{},"sourceType":"module"}