{"ast":null,"code":"var _jsxFileName = \"/Users/mdsanowaralam/Desktop/job-listing-react-master/src/App.js\";\nimport React from \"react\";\nimport { Box, Button, CircularProgress, Grid, ThemeProvider } from \"@material-ui/core\";\nimport theme from \"./theme/theme\";\nimport Header from \"./component/Header/Index\";\nimport SearchBar from \"./component/SearchBar\";\nimport JobCards from \"./component/jobs/jobCards\";\nimport NewJobModal from \"./component/jobs/NewJobModal\"; // import jobData from './dummyData';\n\nimport { useState } from \"react\";\nimport { firestore, app } from \"./component/firebase/config\";\nimport { useEffect } from \"react\";\nimport { Close as CloseIcon } from '@material-ui/icons';\nimport ViewJobModal from \"./component/jobs/ViewJobModal\";\nexport default (() => {\n  const [jobs, setjobs] = useState([]);\n  const [loading, setloading] = useState(true);\n  const [customSearch, setcustomSearch] = useState(false);\n  const [newJobModal, setnewJobModal] = useState(false);\n  const [viewJob, setviewJob] = useState({});\n\n  const fetchjobs = async () => {\n    setcustomSearch(false);\n    setloading(true);\n    const req = await firestore.collection(\"job collection\").orderBy(\"postedOn\", \"desc\").get(); // console.log(req);\n\n    const tempjobs = req.docs.map(job => ({ ...job.data(),\n      id: job.id,\n      postedOn: job.data().postedOn.toDate()\n    })); // console.log(tempjobs);\n\n    setjobs(tempjobs);\n    setloading(false);\n  };\n\n  const fetchJobsCustom = async jobSearch => {\n    setloading(true);\n    setcustomSearch(true);\n    const req = await firestore.collection(\"job collection\").orderBy(\"postedOn\", \"desc\").where(\"locaton\", \"==\", jobSearch.locaton).where(\"type\", \"==\", jobSearch.type).get();\n    const tempjobs = req.docs.map(job => ({ ...job.data(),\n      id: job.id,\n      postedOn: job.data().postedOn.toDate()\n    }));\n    setjobs(tempjobs);\n    setloading(false);\n  };\n\n  const postJob = async jobDetails => {\n    await firestore.collection(\"job collection\").add({ ...jobDetails,\n      postedOn: app.firestore.FieldValue.serverTimestamp()\n    });\n    fetchjobs();\n  };\n\n  useEffect(() => {\n    fetchjobs();\n  }, []);\n  return /*#__PURE__*/React.createElement(ThemeProvider, {\n    theme: theme,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    openNewJobModal: () => setnewJobModal(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(NewJobModal, {\n    closeModal: () => setnewJobModal(false),\n    newJobModal: newJobModal,\n    postJob: postJob,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(ViewJobModal, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 10,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(SearchBar, {\n    fetchJobsCustom: fetchJobsCustom,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }\n  }), loading ? /*#__PURE__*/React.createElement(Box, {\n    display: \"flex\",\n    justifyContent: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }\n  }, \" \", /*#__PURE__*/React.createElement(CircularProgress, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 15\n    }\n  })) : /*#__PURE__*/React.createElement(React.Fragment, null, customSearch && /*#__PURE__*/React.createElement(Box, {\n    my: 2,\n    display: \"flex\",\n    justifyContent: \"flex-end\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: fetchjobs,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(CloseIcon, {\n    size: 20,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 23\n    }\n  }), \"Custom Search\")), jobs.map(job => /*#__PURE__*/React.createElement(JobCards, Object.assign({\n    key: job.id\n  }, job, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 19\n    }\n  })))))));\n});","map":{"version":3,"sources":["/Users/mdsanowaralam/Desktop/job-listing-react-master/src/App.js"],"names":["React","Box","Button","CircularProgress","Grid","ThemeProvider","theme","Header","SearchBar","JobCards","NewJobModal","useState","firestore","app","useEffect","Close","CloseIcon","ViewJobModal","jobs","setjobs","loading","setloading","customSearch","setcustomSearch","newJobModal","setnewJobModal","viewJob","setviewJob","fetchjobs","req","collection","orderBy","get","tempjobs","docs","map","job","data","id","postedOn","toDate","fetchJobsCustom","jobSearch","where","locaton","type","postJob","jobDetails","add","FieldValue","serverTimestamp"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Box, Button, CircularProgress, Grid, ThemeProvider } from \"@material-ui/core\";\nimport theme from \"./theme/theme\";\nimport Header from \"./component/Header/Index\";\nimport SearchBar from \"./component/SearchBar\";\nimport JobCards from \"./component/jobs/jobCards\";\nimport NewJobModal from \"./component/jobs/NewJobModal\";\n// import jobData from './dummyData';\nimport { useState } from \"react\";\nimport { firestore, app } from \"./component/firebase/config\";\nimport { useEffect } from \"react\";\nimport {Close as CloseIcon} from '@material-ui/icons'\nimport ViewJobModal from \"./component/jobs/ViewJobModal\";\n\nexport default () => {\n  const [jobs, setjobs] = useState([]);\n  const [loading, setloading] = useState(true);\n  const [customSearch, setcustomSearch] = useState(false);\n  const [newJobModal, setnewJobModal] = useState(false);\n  const[viewJob,setviewJob]=useState({})\n\n  const fetchjobs = async () => {\n    setcustomSearch(false);\n    setloading(true);\n    const req = await firestore\n      .collection(\"job collection\")\n      .orderBy(\"postedOn\", \"desc\")\n      .get();\n    // console.log(req);\n    const tempjobs = req.docs.map((job) => ({\n      ...job.data(),\n      id: job.id,\n      postedOn: job.data().postedOn.toDate(),\n    }));\n    // console.log(tempjobs);\n    setjobs(tempjobs);\n    setloading(false);\n  };\n\n  const fetchJobsCustom = async (jobSearch) => {\n    setloading(true);\n    setcustomSearch(true);\n    const req = await firestore\n      .collection(\"job collection\")\n      .orderBy(\"postedOn\", \"desc\")\n      .where(\"locaton\", \"==\", jobSearch.locaton)\n      .where(\"type\",\"==\",jobSearch.type)\n      .get();\n    const tempjobs = req.docs.map((job) => ({\n      ...job.data(),\n      id: job.id,\n      postedOn: job.data().postedOn.toDate(),\n    }));\n    setjobs(tempjobs);\n    setloading(false);\n  };\n\n  const postJob = async (jobDetails) => {\n    await firestore.collection(\"job collection\").add({\n      ...jobDetails,\n      postedOn: app.firestore.FieldValue.serverTimestamp(),\n    });\n    fetchjobs();\n  };\n\n  useEffect(() => {\n    fetchjobs();\n  }, []);\n  return (\n    <ThemeProvider theme={theme}>\n      <Header openNewJobModal={() => setnewJobModal(true)} />\n      <NewJobModal\n        closeModal={() => setnewJobModal(false)}\n        newJobModal={newJobModal}\n        postJob={postJob}\n      />\n      <ViewJobModal/>\n      <Grid container justify=\"center\">\n        <Grid item xs={10}>\n          <SearchBar fetchJobsCustom={fetchJobsCustom} />\n\n          {loading ? (\n            <Box display=\"flex\" justifyContent=\"center\">\n              {\" \"}\n              <CircularProgress />\n            </Box>\n          ) : (\n              <>\n                {customSearch && (\n                  <Box my={2} display=\"flex\" justifyContent=\"flex-end\">\n                    <Button onClick={fetchjobs}>\n                      <CloseIcon size={20} />\n                      Custom Search\n                    </Button>\n                  </Box>\n                )}\n                {jobs.map((job) => (\n                  <JobCards key={job.id} {...job} />\n                  ))}\n                  </>\n          )}\n        \n\n          {/* {jobs.map(job => <JobCards key={job.id} {...job} />)} */}\n        </Grid>\n      </Grid>\n    </ThemeProvider>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}